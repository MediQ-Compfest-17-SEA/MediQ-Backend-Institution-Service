version: '3.8'

services:
  institution-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mediq-institution-service
    ports:
      - "8606:8606"
    environment:
      - NODE_ENV=development
      - PORT=8606
      - DATABASE_URL=postgresql://mediq:mediq123@postgres:5432/mediq_institution
      - RABBITMQ_URL=amqp://mediq:mediq123@rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - mediq-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8606/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: mediq-institution-postgres
    environment:
      - POSTGRES_DB=mediq_institution
      - POSTGRES_USER=mediq
      - POSTGRES_PASSWORD=mediq123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"
    networks:
      - mediq-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mediq -d mediq_institution"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: mediq-institution-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=mediq
      - RABBITMQ_DEFAULT_PASS=mediq123
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672"
    networks:
      - mediq-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: mediq-institution-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - mediq-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local

networks:
  mediq-network:
    driver: bridge
    name: mediq-network
